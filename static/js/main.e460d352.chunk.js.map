{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","sortByAlphabet","setState","ALPABET","sortByLength","LENGTH","makeReverse","makeReset","resultGoodsList","goods","resultList","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","this","className","type","classNames","onClick","map","good","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA+CE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAOEC,eAAiB,WACf,EAAKC,SAAS,CAAEH,SAAUL,EAASS,WARvC,EAWEC,aAAe,WACb,EAAKF,SAAS,CAAEH,SAAUL,EAASW,UAZvC,EAeEC,YAAc,WACZ,EAAKJ,UAAS,SAAAL,GAAK,MACjB,CAAEC,YAAaD,EAAMC,gBAjB3B,EAqBES,UAAY,WACV,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUL,EAASM,QAxBzB,4CA4BE,WACE,IAAMQ,EAjEH,SACLC,EADK,GAGJ,IAEGC,EAHFX,EACF,EADEA,SAAUD,EACZ,EADYA,WAENa,EAAY,YAAOF,GAGzB,OAAQV,GACN,KAAKL,EAASS,QACZO,EAAaC,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAME,cAAcD,MAEtB,MAEF,KAAKpB,EAASW,OACZK,EAAaC,EAAaC,MAAK,SAACC,EAAOC,GAAR,OAC7BD,EAAMG,OAASF,EAAME,UAEvB,MACF,QACEN,EAAaC,EAIjB,OAAIb,EACKY,EAAWO,UAGbP,EAqCmBQ,CAAkBvB,EAAiBwB,KAAKtB,OAEhE,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBAAkB,CAChB,WAAYH,KAAKtB,MAAME,WAAaL,EAASS,UAGjDoB,QAASJ,KAAKlB,eAPhB,iCAYA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,WAAYH,KAAKtB,MAAME,WAAaL,EAASW,SAGjDkB,QAASJ,KAAKf,aAPhB,4BAYA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBAAqB,CACnB,YAAaH,KAAKtB,MAAMC,aAG5ByB,QAASJ,KAAKb,YAPhB,sBAWEa,KAAKtB,MAAME,WAAaL,EAASM,MAAQmB,KAAKtB,MAAMC,aACpD,wBACEuB,KAAK,SACLD,UAAU,4BACVG,QAASJ,KAAKZ,UAHhB,sBAUJ,6BAEIC,EAAgBgB,KAAI,SAAAC,GAAI,OACtB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,eAnFtC,GAAyBC,aC9DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.e460d352.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n  let resultList;\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      resultList = visibleGoods.sort((goodA, goodB) => (\n        goodA.localeCompare(goodB)\n      ));\n      break;\n\n    case SortType.LENGTH:\n      resultList = visibleGoods.sort((goodA, goodB) => (\n        goodA.length - goodB.length\n      ));\n      break;\n    default:\n      resultList = visibleGoods;\n      break;\n  }\n\n  if (isReversed) {\n    return resultList.reverse();\n  }\n\n  return resultList;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  // eslint-disable-next-line react/sort-comp\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  makeReverse = () => {\n    this.setState(state => (\n      { isReversed: !state.isReversed }\n    ));\n  };\n\n  makeReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const resultGoodsList = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info', {\n                'is-light': this.state.sortType !== SortType.ALPABET,\n              },\n            )}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success', {\n                'is-light': this.state.sortType !== SortType.LENGTH,\n              },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning', {\n                'is-light': !this.state.isReversed,\n              },\n            )}\n            onClick={this.makeReverse}\n          >\n            Reverse\n          </button>\n          {(this.state.sortType !== SortType.NONE || this.state.isReversed) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.makeReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          {\n            resultGoodsList.map(good => (\n              <li data-cy=\"Good\" key={good}>\n                {good}\n              </li>\n            ))\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}